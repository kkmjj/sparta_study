flask 프레임워크 
웹서버 프레임워크  / 서버오 ㅏ클라이언트 구조 를 편리하게 해줌 


https://platum.kr/archives/127938
ipconfig ip주소 확인

ip주소에 대한 도메인 찾기 -> nslookup 해당홈페이지 



<!-- 12.14오전 ajax flask 를 통해서 api mongodb 다루기 -->


#app.run('127.0.0.1',port=5000,debug=True)

from flask import Flask , render_template , jsonify ,request  # render_template 안에서 html 사용
import requests
from bs4 import BeautifulSoup

app = Flask(__name__)

from pymongo import MongoClient           # pymongo를 임포트 하기(패키지 인스톨 먼저 해야겠죠?)

client = MongoClient('localhost', 27017)  # mongoDB는 27017 포트로 돌아갑니다.
db = client.dbsparta                      # 'dbsparta'라는 이름의 db를 만듭니다.
## HTML을 주는 부분
@app.route('/')
def home():
   return render_template('index.html')

## API 역할을 하는 부분
@app.route('/test', methods=['POST'])
def test_post():
   # rank_give로 클라이언트가 준 rank을 가져오기 & 숫자변환
   rank_receive = request.form['rank_give']
   rank_receive = int(rank_receive)

   # star_give로 클라이언트가 준 star를 가져오기 & 숫자변환
   star_receive = request.form['star_give']
   star_receive = int(star_receive)

   # 해당 순위의 영화를 받은 score로 업데이트 해주기
   db.movies.update_one({'rank': rank_receive}, {'$set': {'star': star_receive}})

   # 다했으면 성공여부만 보냄
   return jsonify({'result': 'success'})


@app.route('/test', methods=['GET'])
def test_get():
    # rank_give로 클라이언트가 준 rank을 가져오기
    rank_receive = request.args.get('rank_give')

    # rank_receive를 숫자로 만들어주기 (db엔 숫자로 저장되어있으니까!)
    rank_receive = int(rank_receive)

    # rank의 값이 받은 rank와 일치하는 document 찾기 & _id 값은 출력에서 제외하기
    movie_info = db.movies.find_one({'rank':rank_receive},{'_id':0})

    # info라는 키 값으로 영화정보 내려주기
    return jsonify({'result':'success', 'info':movie_info})

@app.route('/new', methods=['POST'])
def new_post():
   rank_receive = int(request.form['rank_give'])
   star_receive = request.form['star_give']
   title_receive = request.form['title_give']

   db.movies.insert_one({'rank': rank_receive, 'star': star_receive, 'title':title_receive})

   return jsonify({'result': 'success'})


@app.route('/post', methods=['POST'])
def saving():
   urls = request.form['url_give']
   comment = request.form['comment_give']
   # 클라이언트로부터 데이터를 받는 부분
   headers = {
      'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64)AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.86 Safari/537.36'}
   data = requests.get(urls, headers=headers)
   # meta tag를 스크래핑 하는 부분
   soup = BeautifulSoup(data.text, 'html.parser')
   image = soup.select_one('meta[property="og:image"]').get('content')

   # mongoDB에 넣는 부분

   imformation = {
      'url': urls,
      'comment':comment,
      'image':image
   }

   db.articles.insert_one(imformation)


   return jsonify({'result': 'success'})


if __name__ == '__main__':
   app.run('127.0.0.1',port=5000,debug=True)